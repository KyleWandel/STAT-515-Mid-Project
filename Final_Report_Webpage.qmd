---
title: "Final Report"
execute:
  echo: false
format:
  html: 
    theme: cosmo
editor: visual
---

```{r}
# Install Packages if needed # 
packages <- c( "report","randomForest","tree","dplyr", "tidyverse", "plotly", "psych", "ISLR", "leaps", "reshape2","readr")
# Check if packages are not installed, then install
for (package in packages) {
  if (!(package %in% installed.packages())) {
    install.packages(package, dependencies = TRUE)
  }
}
# Load libraries
library(dplyr)
library(tidyverse)
library(plotly)
library(psych)
library(ISLR)
library(leaps)
library(reshape2)
library(readr)
library(tree)
library(randomForest)
library(caret)
library(report)

# Create theme for plots
hw <- theme_gray() +
  theme(
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    plot.caption = element_text(hjust = 0),
    
    strip.text.y = element_blank(),
    strip.background = element_rect(fill = rgb(0.9, 0.95, 1), colour = gray(0.5), size = 0.2),
    
    panel.border = element_rect(fill = FALSE, colour = gray(0.70)),
    panel.grid.minor = element_blank(), # Combine minor grid lines
    panel.spacing.x = unit(0.10, "cm"),
    panel.spacing.y = unit(0.05, "cm"),
    
    axis.ticks = element_blank(),
    axis.text = element_text(colour = "black")
  )
```

## Abstract

For the final project for our STAT 515 class, we were asked to find a dataset and perform a robust advanced analysis on the data. For this project we chose to use breast cancer screening data from the University of Wisconsin \[1\]. This study aims to identify patterns and indicators that could potentially predict the signs of malignant cancerous cells. Through meticulous analysis, the paper investigates various aspects, including a deep dive into the predictor variables and their relationship to each other and the response variable, the creation of various statistical models to predict cancerous cells and then finally a comparison of models to choose the best one. By scrutinizing these factors, this research hopes to make discovering breast cancer in patients easier and earlier.  

## i. Introduction

Breast cancer is one of the most common cancers in the world. While the pharmaceutical industry has invested quite a bit in trying to find a definitive cure to this cancer, it still raises the need for more analysis to be done on breast cancer data so that a cancerous tumor can be caught in the early stages. We wanted to see if it was possible to identify the potential emergence of breast cancer in women based on different features of the tumor cells. This dataset seemed like a good fit since it has 9 predictor variables, and the outcome variable would indicate whether the tumor can be classified as malignant (cancerous) or benign (non-cancerous). 

The dataset we choose to perform this research is from Dr. William Wolberg and his clinical studies from 1989 to 1991. This dataset is very well known and highly integrable due to the amount of research conducted using this data. Below is a list and description of the 9 predictor variables and the 1 response variable (benormal).  

-   **clumpthickness**: (1-10). Benign cells tend to be grouped in monolayers, while cancerous cells are often grouped in multilayers. 

-   **uniformcellsize** (1-10). Cancer cells tend to vary in size and shape. 

-   **uniformcellshape** (1-10). Cancer cells tend to vary in shape and size. 

-   **margadhesion**: (1-10). Normal cells tend to stick together, while cancer cells tend to lose this ability, so the loss of adhesion is a sign of malignancy. 

-   **epithelial**: (1-10). It is related to the uniformity mentioned above. Epithelial cells that are significantly enlarged may be malignant. 

-   **barenuclei**: (1-10). This term is used for nuclei not surrounded by cytoplasm (the rest of the cell). Those are typically seen in benign tumors. 

-   **blandchromatin**: (1-10). Describes a uniform "texture" of the nucleus seen in benign cells. In cancer cells, the chromatin tends to be more coarse and to form clumps. 

-   **normalnucleoli**: (1-10). Nucleoli are small structures seen in the nucleus. In normal cells, the nucleolus is usually very small, if visible. The nucleoli become more prominent in cancer cells, and sometimes there are multiple. 

-   **mitoses**: (1-10). Cancer is essentially a disease of uncontrolled mitosis. 

-   **benormal**: (2 or 4). Benign (non-cancerous) or malignant (cancerous) lump in a breast. ii. Materials and Methods

The University of Wisconsin breast cancer data from William Wolberg has 699 observations and 10 variables, the first variable represents the ID of the sample and the last column "benornal" represents the classification/response variable (for benign, 4 for malignant).

```{r}
url <- "https://raw.githubusercontent.com/KyleWandel/STAT-515-Final-Project/main/breast-cancer-wisconsin.csv"
df <- read.table(url, header = TRUE, sep = ",")
str(df)
```

Using this dataset we wanted to try and answer the following research questions:

Question 1: What are the variables displaying significant correlation?

Question 2: How does Principal Component Analysis contribute to understanding the variance explained by principal components in our dataset?

Question 3: Can a logistic regression model be created to accurately predict malignant breast cancer cells?

Question 4: Can a random forest model be created to accurately predict the likelihood of a cell being malignant?

To make the dataset ready for analysis we removed the ID column, checked and removed all rows with missing data changed he response variable values to malignant (4) = 1 and benign (2) = 0.

```{r}
# remove ID column 
df <- subset(df, select = -id) 
# Change column type
df$barenuclei <- as.integer(df$barenuclei) 
# Look for missing values
colSums(is.na(df)) 
# omit missing values
df_clean <- na.omit(df) 
str(df_clean) 
# Change response variable to 1 and 0
df_clean$benormal <- ifelse(df_clean$benormal == 4, 1, ifelse(df_clean$benormal == 2, 0, df_clean$benormal)) 
summary(df_clean) 
table(df_clean$benormal)
```

After cleaning the dataset, we looked at a summary of the statistics for each variable. For our sample there are 444 records that are identified as not being malignant (=0) and 239 records that are identified as being malignant (=1).

We next wanted to identify if there were any patterns amongst the predictor variables in the dataset. First we looked at the correlations, histrograms and scatterplots of the variables using the pairs.panel() function.

```{r}
pairs.panels(df_clean)
```

Some of the variables showed correlations to each other, but none were deemed significant by the corr.test() function. But one thing we did notice was that many of the variables exhibited a right skew with their means larger than their medians. We could potentially log() the variables to make them more uniform.

## ii. Materials and Methods

### Principal Component Analysis

We mentioned earlier that some of our variables were correlated but none were significantly correlated to each other. Also, in some of our other models, some of the variables were not significantly correlated to predicting the response variable. To examine this further, we did a principal component analysis on the predictor variables too see if reducing the number of variables of a data set naturally comes at the expense of accuracy while not losing too much accuracy.

We first took a look a the mean and variances of the variables in the dataset to see if the variables should be scaled or not. Below are the means an variances of the variables:

```{r}
PCA_df <- df_clean[, -ncol(df_clean)]
states=row.names(PCA_df)
apply(PCA_df, 2, mean)
apply(PCA_df, 2, var)
apply(PCA_df, 2, sd)
# There is difference in the mean and variance, so we do should scale/standardize the variables.
```

Based on these results the following variables exhibit some significant diversity across the dataset; clumpthickness, uniformcellsize, uniformcellshape, margadhesion, barenuclei and normalnucleoli. The following variables showed some moderate variability across the dataset; epithelial, blandchromatin, and mitoses. Because of these results it would be best to scale the variables for analysis.

After running a PCA analysis found that most of the variables are grouped indicating that there are similar observations based on the variable values. There are not too many outliers to indicate any unusual observations.

```{r}
# Calculate the principal components
pr.out=prcomp(PCA_df, scale=TRUE)
pr.out$rotation=-pr.out$rotation
pr.out$x=-pr.out$x
biplot(pr.out, scale=0, main = "Biplot of PCA Results", cex =0.7)
```

Looking at the bigplot mitoses has the largest contribution when looking at the variables to the corresponding principal component. All of the variables, except for mitoses are positively correlated. Most of the variables are closer to all the other variables except for mitoses, further indicating that they are strongly influenced by these corresponding variables. Looking at the axis' of the graph PC1 explains the most variance in the data as it has the longer axis than PC2.

The following graph is the scree plot for the PCA which is used to provide a simple yet effective way to see balance and the trade-off between retaining information and reducing dimensionality in your data.

```{r}
# Scree plot
(pr.var=pr.out$sdev^2) #variance of each PC
pve=pr.var/sum(pr.var)
pve
par(mfrow =c(1,2))
plot(pve, main = "Scree Plot for Variance Explained",
     xlab="Principal Component", 
     ylab="Proportion of Variance Explained", ylim=c(0,1),type='b')
```

Looking at this graph we can easily identify that there is a large drop off-point after the first PCA, indicating that adding an additional principal component does not significantly add value at explaining the variability in the data.

The following graph shows cumulative proportion of variance that each principal components adds.

```{r}
plot(cumsum(pve), main = "Scree Plot for Cumulative Variance Explained",
     xlab="Principal Component",
     ylab="Cumulative Proportion of Variance Explained", 
     ylim=c(0,1),type='b')

```

Looking at this graph it seems that 4 principal components would be needed to explain over 80% of the variance.

### Logistic Regression Model

We decided to develop a Logistic regression model to see if we could develop a model that could be used to predict if a cell was cancerous or not. Because our outcome can only be one of two things (cell is malignant or benign) we should be using a classification model and logistic regression is a simple model which is much easier to set up and train initially than other machine learning models.

For the first model we used the cleaned dataset and all of the variables.

```{r}
model_1 <- glm(benormal ~ ., data = df_clean, family = binomial) 
summary(model_1) 
model_1 
```

In this model the variables clumpthickness, margadhesion, barenuclei, blandchromatin were considered the only variables had a significant impact on the response variables with p-values less than .05. The overall model had an AIC of 122.89.

Next, we wanted to create a new model after logging our variables.

```{r}
variables_to_log <- c("mitoses", "normalnucleoli", "blandchromatin", "epithelial", "margadhesion", "uniformcellshape", "uniformcellsize","clumpthickness") 
df_log <- df_clean 
df_log[variables_to_log] <- lapply(df_log[variables_to_log], log) 
model_2 <- glm(benormal ~ ., data = df_log, family = binomial) 
summary(model_2) 
model_2 
```

For this model the variables clumpthickness and barenuclei were considered the only variables had a significant impact on the response variables with p-values less than .05. The overall model had an AIC of 127.02.

Based on the AIC of these two models, the non-logged model performed better. Now lets try and simplify the model.

```{r}
model_3 <- glm(benormal ~ clumpthickness + margadhesion + barenuclei + blandchromatin, data = df_clean, family = binomial) 
summary(model_3) 
model_3 
anova(model_1, model_3, test = "Chisq") 
```

As should be expected, creating a model using only the significant variables was worse at explaining the dataset. Using the Chisq test, we can also conclude that the more complex model is significantly better than the simpler model.

Using model_1 as the final model, lets see how accurate it is for prediction.

```{r}
glm.probs=predict(model_1,type="response")
glm.probs[1:10]

glm.pred=rep(0,nrow(df_clean))
glm.pred[glm.probs>.5]=1

glm.pred=as.factor(glm.pred)
df_clean$benormal=as.factor(df_clean$benormal)
confusionMatrix(glm.pred,df_clean$benormal)
```

Looking at the confusion matrix this is a very good model with high predictability for both false positives and negatives. The % chance the model falsely predicted cancer when not was 10/444 (2.2%) and the chance the model falsely predicted not having cancer when there was 11/239 (4.6%).

### Decision Tree and Random Forest Modeling

Another modeling technique we used for predicting whether a cell was cancerous or not was a random forest model. One of the biggest advantages of random forests is its versatility. It can be used for both regression and classification tasks, and it's also easy to view the relative importance it assigns to the input features. One of the biggest problems in machine learning is overfitting, but most of the time this won't happen thanks to the random forest classifier. If there are enough trees in the forest, the classifier won't overfit the model.

First, we looked at a decision tree model to determine the best spilt for node splitting. We did this by splitting the data into two sets, training and testing to train the model and then test its accuracy.

For this first model we included all of the variables in the dataset.

```{r}
df_clean$benormal=as.integer(df_clean$benormal)
set.seed(2) 
train = sample(1:nrow(df_clean), nrow(df_clean)/2) 
tree.df_clean=tree(benormal~.,df_clean,subset=train) 
plot(tree.df_clean, )
title("Breast Cancer Decision Tree")
text(tree.df_clean,pretty=0)
summary(tree.df_clean)
```

Based on this model alone we have a very strong model with a mean squared error (MSE) of just .025.

We then wanted to see if we could make the model better by keeping the residual difference low by pruning the tree and finding the lowest number of nodes to create a split with. Looking at the cross-validated decision tree graph below it looks like splitting the tree using 3 nodes is best.

```{r}
cv.df_clean=cv.tree(tree.df_clean)
plot(cv.df_clean$size,cv.df_clean$dev,type='b')
```

After pruning the tree and using 3 nodes to spilt the data below is the resulting model.

```{r}
prune.df_clean=prune.tree(tree.df_clean,best=3)
summary(prune.df_clean)

plot(prune.df_clean)
title("Breast Cancer Decision Tree")
text(prune.df_clean,pretty=0)
```

This is another strong model with a MSE of just .039. When comparing these models, their resdidual variances are very similar, as such we would likely choose the more simple model.

Lets now use a random forest model to prevent any potential overfitting of our decision tree model.

```{r}
df_clean <- na.omit(df) 
df_clean$benormal <- ifelse(df_clean$benormal == 4, 1, ifelse(df_clean$benormal == 2, 0, df_clean$benormal))
cancer_rf=randomForest(benormal~.,data=df_clean,subset=train,mtry=3,importance=TRUE)
yhat.rf = predict(cancer_rf,newdata=df_clean[-train,])
mean((yhat.rf-df_clean.test)^2) #test set MSE
```

By creating a random forest model we were able to reduce the MSE from .039 to .026

```{r}
plot(cancer_rf, 
     main = "Random Forest Plot for Error Rate vs Trees")
grid()
```

Taking a look a which variables were most important in the model.

```{r}
plot(cancer_rf)
varImpPlot(cancer_rf, main = "Variable Importance Plots")
```

The variable that is most important to reduce the mean standard error (MSE) is barenuceli and the variables that were deemed the most important to include in the node splitting were uniformcellsize and uniformcellshape. Overall, the model is very good with 88.7% of the variables explained. Looking at the confusion matrix:

```{r}
glm.probs=predict(cancer_rf,df_clean,type="response")
glm.probs[1:10]

glm.pred=rep(0,nrow(df_clean))
glm.pred[glm.probs>.5]=1

glm.pred=as.factor(glm.pred)
df_clean$benormal=as.factor(df_clean$benormal)
confusionMatrix(glm.pred,df_clean$benormal)
```

The percent chance the model falsely predicted cancer when not was 6/444 (1.4%) and the chance the model falsely predicted not having cancer when there was 9/239 (3.7%).

## iii. Limitations

There were no major limitations for this analysis but there were a few of things that needed to be done to the dataset in order to clean and make the dataset usable for analysis. First, we had to identify and remove all missing rows from the dataset. Second, we had to transform the response variable to be "0" and "1". Finally, many of the variables seemed to show a left skew making us question if the variables should be transformed or not. 

There were only 699 samples for the dataset and although a solid number of samples, more samples would lead to a more predictable conclusion. 

## iv. Conclusion

It seems that a significantly accurate model can be created to predict if a cancerous cell could be malignant using the measurements recorded in this dataset. To test this, we created multiple regression models, a random forest model, and a PCA analysis to understand the variables more thoroughly.  

In the PCA test we determined that the dataset's variance could be explained by simplifying and using only 2 of 9 predictor variables. We then created multiple logistic regression models and compared them to each other to choose the best one. After variable transformation and selection, we determined the best model would be to use all the variables. The percent chance the model falsely predicted cancer when not was 10/444 (2.2%) and the chance the model falsely predicted not having cancer when there was 11/239 (4.6%). We then decided to try and create an optimal best random forest model, starting with a best fit decision tree model. The created model resulted in an overall accuracy rate of almost 98% with the percent chance the model falsely predicted cancer when not was 6/444 (1.4%) and the chance the model falsely predicted not having cancer when there was 9/239 (3.7%). Based on the two models we created, the best model to use would be the random forest model because of its high accuracy and predictability. 

## References

\[1\] Wolberg,WIlliam. (1992). Breast Cancer Wisconsin (Original). UCI Machine Learning Repository. https://doi.org/10.24432/C5HP4Z. 

```{r}
cite_packages()
```
